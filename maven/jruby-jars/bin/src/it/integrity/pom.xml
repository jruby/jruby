<project>
  <groupId>org.jruby</groupId>
  <artifactId>executables</artifactId>
  <version>1</version>
  <modelVersion>4.0.0</modelVersion>

  <dependencies>
    <dependency>
      <groupId>rubygems</groupId>
      <artifactId>jruby-jars</artifactId>
      <version>@project.version@</version>
      <type>gem</type>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
	<groupId>de.saumya.mojo</groupId>
	<artifactId>gem-maven-plugin</artifactId>
	<version>1.0.5</version>
	<executions>
	  <execution>
	    <goals><goal>initialize</goal></goals>
	  </execution>
	</executions>
        <configuration>
          <jrubyVersion>1.7.22</jrubyVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2</version>
	<configuration>
	  <executable>java</executable>
	  <environmentVariables>
	    <PATH>${basedir}</PATH>
	    <HOME>${basedir}</HOME>
	  </environmentVariables>
	</configuration>
	<executions>
	  <execution>
	    <id>gem list</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
	    <configuration>
	      <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-S</argument>
		<argument>gem</argument>
		<argument>list</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>rake executable</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
	    <configuration>
	      <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-S</argument>
		<argument>rake</argument>
		<argument>--version</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>rdoc executable</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
	    <configuration>
	      <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-S</argument>
		<argument>rdoc</argument>
		<argument>--version</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>check jruby-home</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
	    <configuration>
	      <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-e</argument>
		<argument>p JRuby.runtime.jruby_home</argument>
              </arguments>
            </configuration>
          </execution>
	  <execution>
	    <id>count installed gems</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
	    <configuration>
	      <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-e</argument>
		<argument>
		  require 'stringio'
		  require 'rubygems/commands/list_command'
		  require 'rubygems/user_interaction'
		  s = StringIO.new
		  l = Gem::Commands::ListCommand.new
		  l.ui= Gem::StreamUI.new( STDIN, s, STDERR, true )
		  l.execute
		  c = s.string.split( /\n/ ).count
		  puts 'gems count ' + c.to_s
		</argument>
	      </arguments>
	    </configuration>
	  </execution>
	  <execution>
	    <id>load default gems</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
            <configuration>          
	      <executable>java</executable> 
              <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-e</argument>
		<!-- make sure openssl loads -->
		<argument>
		  require 'jar-dependencies'
		  require 'openssl'
		  puts Gem.loaded_specs.keys.sort.join(',')
		</argument>
              </arguments>
            </configuration>
	  </execution>
	  <execution>
	    <id>ensure there is no org.objectweb.asm.ClassWriter</id>
	    <phase>test</phase>
	    <goals>
              <goal>exec</goal>
            </goals>
            <configuration>          
	      <executable>java</executable> 
              <arguments>
		<argument>-classpath</argument>
		<argument>${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-core-@project.version@-complete.jar${path.separator}${gem.home}/gems/jruby-jars-${ruby.version}/lib/jruby-stdlib-@project.version@.jar</argument>
		<argument>org.jruby.Main</argument>
		<argument>-e</argument>
		<!-- make sure openssl loads -->
		<argument>
		  begin
		    import_java "org.objectweb.asm.ClassWriter"
		    raise "error there is org.objectweb.asm.ClassWriter on the classpath"
		  rescue NameError => e
		    puts "there is NO org.objectweb.asm.ClassWriter on the classpath"
                  end
		</argument>
              </arguments>
            </configuration>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
