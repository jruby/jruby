fails:ObjectSpace.each_object walks a class and its normal descendants when passed the class's singleton class
fails:ObjectSpace.each_object on singleton classes walks singleton classes
slow:ObjectSpace.each_object calls the block once for each living, non-immediate object in the Ruby process
slow:ObjectSpace.each_object calls the block once for each class, module in the Ruby process
slow:ObjectSpace.each_object returns an enumerator if not given a block
slow:ObjectSpace.each_object finds an object stored in a global variable
slow:ObjectSpace.each_object finds an object stored in a top-level constant
slow:ObjectSpace.each_object finds an object stored in a second-level constant
slow:ObjectSpace.each_object finds an object stored in a local variable
slow:ObjectSpace.each_object finds an object stored in a local variable captured in a block explicitly
slow:ObjectSpace.each_object finds an object stored in a local variable captured in a block implicitly
slow:ObjectSpace.each_object finds an object stored in a local variable captured in by a method defined with a block
slow:ObjectSpace.each_object finds an object stored in a local variable captured in a Proc#binding
slow:ObjectSpace.each_object finds an object stored in a local variable captured in a Kernel#binding
slow:ObjectSpace.each_object finds an object stored in a local variable set in a binding manually
slow:ObjectSpace.each_object finds an object stored in an array
slow:ObjectSpace.each_object finds an object stored in a hash key
slow:ObjectSpace.each_object finds an object stored in a hash value
slow:ObjectSpace.each_object finds an object stored in an instance variable
slow:ObjectSpace.each_object finds an object stored in a thread local
slow:ObjectSpace.each_object finds an object stored in a fiber local
slow:ObjectSpace.each_object finds an object captured in an at_exit handler
slow:ObjectSpace.each_object finds an object captured in finalizer
slow:ObjectSpace.each_object on singleton classes does not walk hidden metaclasses
