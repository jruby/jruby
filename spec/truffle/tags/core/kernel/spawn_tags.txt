fails:Kernel#spawn joins the current process if pgroup: false
fails:Kernel#spawn joins the current process if pgroup: nil
fails:Kernel#spawn joins a new process group if pgroup: true
fails:Kernel#spawn joins a new process group if pgroup: 0
fails:Kernel#spawn joins the specified process group if pgroup: pgid
fails:Kernel#spawn sets the umask if given the :umask option
fails:Kernel#spawn raises an Errno::ENOENT if the command does not exist
fails:Kernel#spawn raises an Errno::EACCES when the file does not have execute permissions
fails:Kernel#spawn raises an Errno::EACCES when passed a directory
fails:Kernel#spawn with a single argument raises an ArgumentError if the command includes a null byte
fails:Kernel#spawn with multiple arguments raises an ArgumentError if an argument includes a null byte
fails:Kernel#spawn with a command array raises an ArgumentError if the Strings in the Array include a null byte
fails:Kernel#spawn when passed :chdir changes to the directory passed for :chdir
fails:Kernel#spawn when passed :chdir calls #to_path to convert the :chdir value
fails(windows):Kernel#spawn raises an ArgumentError if given :pgroup option
slow:Kernel#spawn when passed close_others: true does not close STDIN
slow:Kernel#spawn when passed close_others: true does not close STDOUT
slow:Kernel#spawn when passed close_others: true does not close STDERR
slow:Kernel#spawn when passed close_others: false does not close STDIN
slow:Kernel#spawn when passed close_others: false does not close STDOUT
slow:Kernel#spawn when passed close_others: false does not close STDERR
fails:Kernel#spawn when passed close_others: true closes file descriptors >= 3 in the child process
fails:Kernel#spawn when passed close_others: true does not close STDIN
fails:Kernel#spawn when passed close_others: true does not close STDOUT
fails:Kernel#spawn when passed close_others: true does not close STDERR
fails(flakey on Travis):Kernel#spawn when passed close_others: false closes file descriptors >= 3 in the child process because they are set close_on_exec by default
ci:Kernel#spawn redirects STDOUT to the given file if out: String
ci:Kernel#spawn redirects STDOUT to the given file if out: [String name, String mode]
ci:Kernel#spawn redirects STDERR to the given file if err: String
slow:Kernel#spawn redirects STDOUT to the given file if out: String
slow:Kernel#spawn redirects STDOUT to the given file if out: [String name, String mode]
slow:Kernel#spawn redirects STDERR to the given file if err: String
slow:Kernel#spawn does NOT redirect both STDERR and STDOUT at the time to the given name
slow:Kernel#spawn redirects STDOUT to the given file descriptior if out: Fixnum
slow:Kernel#spawn redirects STDOUT to the given file if out: IO
slow:Kernel#spawn redirects STDERR to the given file descriptior if err: Fixnum
slow:Kernel#spawn redirects STDERR to the given file descriptor if err: IO
slow:Kernel#spawn redirects STDERR to child STDOUT if :err => [:child, :out]
slow:Kernel#spawn redirects both STDERR and STDOUT to the given file descriptior
slow:Kernel#spawn redirects both STDERR and STDOUT to the given IO
slow:Kernel#spawn returns the process ID of the new process as a Fixnum
slow:Kernel#spawn returns immediately
slow:Kernel#spawn sets environment variables in the child environment
slow:Kernel#spawn unsets environment variables whose value is nil
slow:Kernel#spawn calls #to_hash to convert the environment
slow:Kernel#spawn calls #to_str to convert the environment keys
slow:Kernel#spawn calls #to_str to convert the environment values
slow:Kernel#spawn raises an ArgumentError if an environment key includes an equals sign
slow:Kernel#spawn raises an ArgumentError if an environment key includes a null byte
slow:Kernel#spawn raises an ArgumentError if an environment value includes a null byte
slow:Kernel#spawn unsets other environment variables when given a true :unsetenv_others option
slow:Kernel#spawn unsets other environment variables when given a non-false :unsetenv_others option
slow:Kernel#spawn does not unset other environment variables when given a false :unsetenv_others option
slow:Kernel#spawn does not unset other environment variables when given a nil :unsetenv_others option
slow:Kernel#spawn does not unset environment variables included in the environment hash
slow:Kernel#spawn joins the current process group by default
slow:Kernel#spawn uses the current working directory as its working directory
slow:Kernel#spawn uses the current umask by default
slow:Kernel#spawn when passed close_others: false closes file descriptors >= 3 in the child process because they are set close_on_exec by default
slow:Kernel#spawn when passed close_others: false does not close file descriptors >= 3 in the child process if fds are set close_on_exec=false
slow:Kernel#spawn with Integer option keys maps the key to a file descriptor in the child that inherits the file descriptor from the parent specified by the value
ci:Kernel#spawn unsets other environment variables when given a true :unsetenv_others option
ci:Kernel#spawn unsets other environment variables when given a non-false :unsetenv_others option
ci:Kernel#spawn does not unset environment variables included in the environment hash
